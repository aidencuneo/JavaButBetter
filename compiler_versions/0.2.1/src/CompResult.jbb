inline(HashMap<String, String> classes;)
inline(HashMap<String, AccessMod> classAccess;)
string startTemplate
string endTemplate

CompResult(
    HashMap<string, string> classes,
    HashMap<string, AccessMod> classAccess,
    string startTemplate,
    string endTemplate):
    this.classes = classes
    this.classAccess = classAccess
    this.startTemplate = startTemplate
    this.endTemplate = endTemplate

string constructClassString(string className):
    string code = classes.getOrDefault(className, "")
    AccessMod accessMod = classAccess.getOrDefault(className, AccessMod.DEFAULT)

    return "" if code.isBlank()

    string accessModStr = MethodAccess.accessModToString(accessMod)
    string separator = (accessModStr.length() > 0 ? " " : "")

    string out = accessModStr + separator + "class " + className + " {\n"
    out += "    " + code.trim()
    out += "\n}\n"

    return out

string getCompiledCode(string mainClassName):
    // Construct classes
    string out = ""

    // File class goes first
    if classes.containsKey(mainClassName)
        out += constructClassString(mainClassName)

    // Construct other classes
    for c in classes.keySet()
        // The null class is used to write code without a class
        if c.equals("null")
            out += classes.get(c)
        elif !c.equals(mainClassName)
            out += constructClassString(c)

    return startTemplate + "\n" + out + endTemplate
