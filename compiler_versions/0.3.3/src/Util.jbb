public static class Util

int indexConvert(int index, int size):
    index += size if index < 0
    return index

(T) T get(ArrayList<T> lst, int index):
    try
        index = indexConvert(index, lst.size())
        return lst.get(index)
    catch IndexOutOfBoundsException e
        return null

(T) ArrayList<T> select(ArrayList<T> lst, int start, int end):
    try
        start = indexConvert(start, lst.size())
        end = indexConvert(end, lst.size())
        return new ArrayList<>(lst.subList(start, end))
    catch IndexOutOfBoundsException | IllegalArgumentException e
        return new ArrayList<T>()
    
(T) ArrayList<T> select(ArrayList<T> lst, int start):
    return select(lst, start, lst.size())

string select(string str, int start, int end):
    try
        start = indexConvert(start, str.length())
        end = indexConvert(end, str.length())

        return str.substring(start, end)
    catch IndexOutOfBoundsException | IllegalArgumentException e
        return ""

string select(string str, int start):
    return select(str, start, str.length())

(T) string d(ArrayList<T> s):
    return "[]" if !s
    let out = "["
    out += e + " " for e in s
    return out.substring(0, out.length() - 1) + "]"
