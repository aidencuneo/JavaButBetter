class Code
    ...

static class Code implements Iterable<T>
    ...
static class Code2 extends Iterable<T>
    ...
public class (T) Code3 implements Iterable<T>
    ...
public static class (T) Code4 extends Iterable<T>
    ...

main:
    // let range0 = [9123.459382..23432.439..343.11]
    // let range1 = [..10]
    // let range2 = [0..100..10]
    // let range3 = [..20..10]
    // let range4 = [20..-100..-10]
    // let range5 = [..]

    // print i for i in [..]
    // println "0: " + i for i in range0
    // println "1: " + i for i in range1
    // println "2: " + i for i in range2
    // println "3: " + i for i in range3
    // println "4: " + i for i in range4
    // println "5: " + i for i in range5

    empty = []
    empty = [1, 2, 3]
    for i in 10
        i = 20
            i = 30
        i = 40
    i = 50
    lst = [1, 2, 3, "hello"]
    ints = [0, 1, 2, 3]
    // println ints[0], ints[1], ints[2], ints[3], ints[-1], ints[-2], ints[-3], ints[-4]
    println ints[0:-1:1], ints[::-1], ints[::1], ints[:2:-1], ints[1:]

    println "69" == "69" // => true

// static class Extensions

// bool == (string a, string b):
//     return a.equals(b)

// public static class Code

// alias StrIntMap = HashMap<string, Int>
// alias max(a, b) = (a > b ? a : b)
// alias balls(a, b) = max(a, b)
// alias balls = max

// main:
//     println "69" == "69" // => true
//     println "69" == 69
//     println 69 == "69"


// static class Extensions

// bool == (string a, string b):
//     return a.equals(b)

// bool == (string a, int b):
//     return a == ("" + b)

// bool == (int a, string b):
//     return ("" + a) == b

// class Extensions

// int (T) length(T[] arr):
//     ret arr.length

// int (T) length(List<T> arr):
//     ret arr.size()

// int length(string s):
//     ret s.length()
